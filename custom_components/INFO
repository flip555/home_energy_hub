I want to create a new integration for Home Energy Hub.

This will be a "Helper" for IOG-Ohme Slots

It will need to access these two sensors from the "ohme" integration 
Granted the following look only for the home pro but there are other models we need to have too!
select.ohme_home_pro_charge_mode = "Smart Charge"
sensor.ohme_home_pro_power >= 1500w

We are recording whether these two match that criteria for a set amount of minutes between the two slots "hh:00-hh29" and "hh30-hh59"

this is what i had setup manually and i want to use the home energy hub to create this in easy helper form.
sensor:
      - name: "IOG Active Charging Duration Slot 00"
        unit_of_measurement: "minutes"
        unique_id: "iog_active_charging_duration_slot_00"
        state: >
          {% set current_time = now() %}
          {% set start_time_slot_00 = current_time.replace(minute=0, second=0, microsecond=0) %}
          {% set end_time_slot_00 = current_time.replace(minute=29, second=59, microsecond=999999) %}
          {% if is_state('binary_sensor.iog_active_charging', 'on') %}
            {% set elapsed_seconds = (as_timestamp(current_time) - as_timestamp(start_time_slot_00)) %}
            {{ (elapsed_seconds / 60) | round(2) }}
          {% else %}
            {% if start_time_slot_00 <= current_time <= end_time_slot_00 %}
              {{ states('sensor.iog_active_charging_duration_slot_00') | float }}
            {% else %}
              0
            {% endif %}
          {% endif %}
          
      - name: "IOG Active Charging Duration Slot 30"
        unit_of_measurement: "minutes"
        unique_id: "iog_active_charging_duration_slot_30"
        state: >
          {% set current_time = now() %}
          {% set start_time_slot_30 = current_time.replace(minute=30, second=0, microsecond=0) %}
          {% set end_time_slot_30 = current_time.replace(minute=59, second=59, microsecond=999999) %}
          {% if is_state('binary_sensor.iog_active_charging', 'on') %}
            {% set elapsed_seconds = (as_timestamp(current_time) - as_timestamp(start_time_slot_30)) %}
            {{ (elapsed_seconds / 60) | round(2) }}
          {% else %}
            {% if start_time_slot_30 <= current_time <= end_time_slot_30 %}
              {{ states('sensor.iog_active_charging_duration_slot_30') | float }}
            {% else %}
              0
            {% endif %}
          {% endif %}
          
